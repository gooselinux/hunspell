Index: hzip.c
===================================================================
RCS file: /cvsroot/hunspell/hunspell/src/tools/hzip.c,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -r1.3 -r1.4
--- hunspell/src/tools/hzip.c	23 Feb 2010 14:43:11 -0000	1.3
+++ hunspell/src/tools/hzip.c	23 Feb 2010 16:57:03 -0000	1.4
@@ -67,20 +67,24 @@
 int get_freqdata(struct item *** dest, FILE * f, unsigned short * termword) {
     int freq[CODELEN];
     int i, j, k, n;
-    char c[2];
+    union {
+        char c[2];
+        unsigned short word;
+    } u;
     for (i = 0; i < CODELEN; i++) freq[i] = 0;
     while((j = getc(f)) != -1 && (k = getc(f)) != -1) {
-        c[0] = j;
-        c[1] = k;
-        freq[*((unsigned short *) c)]++;
+        u.c[0] = j;
+        u.c[1] = k;
+        freq[u.word]++;
     }
     if (j != -1) {
-        c[0] = 1;
-        c[1] = j;
+        u.c[0] = 1;
+        u.c[1] = j;
     } else {
-        c[0] = 0;
-        c[1] = 0;
+        u.c[0] = 0;
+        u.c[1] = 0;
     }
+
     *dest = (struct item **) malloc((CODELEN + 1) * sizeof(struct item *));
     if (!*dest) return -1;
     for (i = 0, n = 0; i < CODELEN; i++) if (freq[i]) {
@@ -90,7 +94,7 @@
     }
     // terminal sequence (also contains the last odd byte of the file)
     (*dest)[n] = newitem(1, NULL, NULL, code_TERM);
-    *termword = *((unsigned short *) c);
+    *termword = u.word;
     return n + 1;
 }
 
@@ -131,7 +135,10 @@
     int i, bits = 0;
     unsigned char cl, ch;
     int cx[2];
-    char c[2];
+    union {
+        char c[2];
+        unsigned short word;
+    } u;
     char * enc = key;
 
     // header and codes
@@ -150,16 +157,15 @@
     fprintf(f2, "%c%c", ch, cl);   // upper and lower byte of record count
     for (i = 0; i < BUFSIZE; i++) bitbuf[i] = '\0';
     for (i = 0; i < CODELEN + 1; i++) if (table[i]) {
-        unsigned short * d = (unsigned short *) &c;
-        *d = (unsigned short) i;
-        if (i == CODELEN) *d = tw;
+        u.word = (unsigned short) i;
+        if (i == CODELEN) u.word = tw;
         if (key) {
             if (*(++enc) == '\0') enc = key;
-            c[0] ^= *enc;
+            u.c[0] ^= *enc;
             if (*(++enc) == '\0') enc = key;
-            c[1] ^= *enc;
+            u.c[1] ^= *enc;
         }        
-        fprintf(f2, "%c%c", c[0], c[1]); // 2-character code id
+        fprintf(f2, "%c%c", u.c[0], u.c[1]); // 2-character code id
         bits = 0;
         write_bits(f2, bitbuf, &bits, table[i]);
         if (key) {
@@ -176,9 +182,9 @@
     // file encoding 
     bits = 0;
     while((cx[0] = getc(f)) != -1 && (cx[1] = getc(f)) != -1) {
-        c[0] = cx[0];
-        c[1] = cx[1];
-        write_bits(f2, bitbuf, &bits, table[*((unsigned short *) c)]);
+        u.c[0] = cx[0];
+        u.c[1] = cx[1];
+        write_bits(f2, bitbuf, &bits, table[u.word]);
     }
     // terminal suffixes
     write_bits(f2, bitbuf, &bits, table[CODELEN]);
Index: suggestmgr.cxx
===================================================================
RCS file: /cvsroot/hunspell/hunspell/src/hunspell/suggestmgr.cxx,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -r1.3 -r1.4
--- hunspell/src/hunspell/suggestmgr.cxx	23 Feb 2010 10:28:51 -0000	1.3
+++ hunspell/src/hunspell/suggestmgr.cxx	23 Feb 2010 16:24:44 -0000	1.4
@@ -1783,12 +1783,13 @@
       u8_u16(su1, 1, s1);
       u8_u16(su2, 1, s2);
       unsigned short idx = (su2->h << 8) + su2->l;
-      if (*((short *)su1) != *((short *)su2) &&
-         (*((unsigned short *)su1) != unicodetolower(idx, langnum))) return 0;
+      unsigned short otheridx = (su1->h << 8) + su1->l;
+      if (otheridx != idx &&
+         (otheridx != unicodetolower(idx, langnum))) return 0;
       int l1 = u8_u16(su1, MAXSWL, s1);
       int l2 = u8_u16(su2, MAXSWL, s2);
       for(i = 1; (i < l1) && (i < l2) &&
-         (*((short *)(su1 + i)) == *((short *)(su2 + i))); i++);
+         (su1[i].l == su2[i].l) && (su1[i].h == su2[i].h); i++);
       return i;
     }
   } else {
